import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib 
import matplotlib.pyplot as plt
plt.style.use('ggplot')
from matplotlib.pyplot import figure

%matplotlib inline
matplotlib.rcParams['figure.figsize'] = (12, 8)

df = pd.read_csv(r'C:\User\Ferrrr\Downloads\movies.csv')

# Exploring data from dataframe
df.head(3)

# Missing data?
for col in df.columns:
    pct_missing = np.mean(df[col].isnull())
    print('{} - {}'.format(col, pct_missing))

# We drop missing data
df = df.dropna(how='any',axis=0) 

#  Which Datatypes for our columns do we have?
df.dtypes

# Changing datatype of budget and gross
df['budget'] = df['budget'].astype('int64')
df['gross'] = df['gross'].astype('int64')

df.head(3)

# Creating correct year column
df['yearcorrect'] = df['released'].str.extract(pat = '([0-9]{4})').astype(int)
df

# We order it by gross revenue
df.sort_values(by=['gross'], inplace = False, ascending = False)

# To see all rows
pd.set_option('display.max_rows', None)

# Drop any duplicates

df['company'].drop_duplicates().sort_values( ascending = False)

# Budget high correlation
# Company high correlation

# Scatter plot with budget vs gross 
plt.scatter(x=df['budget'], y=df['gross'])
plt.title('Budget vs Gross Earnings')
plt.xlabel('Gross Earnings')
plt.ylabel('Budget for Film')
plt.show()

#plot budget vs gross using seaborn to see if its going up (correlated)

sns.regplot(x='budget', y='gross', data=df, scatter_kws={"color": "red"}, line_kws={"color":"blue"})
#looking at correlation

df.corr(method = 'pearson')

correlation_matrix = df.corr(method = 'pearson')

sns.heatmap(correlation_matrix, annot = True)
plt.title("Correlation Metric for Numeric Features")
plt.xlabel("Movie Features")
plt.ylabel("Movie Features")
plt.show()

#looks at Company

df_numerized = df
for col_name in df_numerized.columns:
    if (df_numerized[col_name].dtype == 'object'):
       df_numerized[col_name] = df_numerized[col_name].astype('category')
       df_numerized[col_name] = df_numerized[col_name].cat.codes
df_numerized

correlation_matrix = df_numerized.corr(method = 'pearson')

sns.heatmap(correlation_matrix, annot = True)
plt.title("Correlation Metric for Numeric Features")
plt.xlabel("Movie Features")
plt.ylabel("Movie Features")
plt.show()
